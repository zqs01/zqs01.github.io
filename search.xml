<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python提取mfcc特征</title>
      <link href="/2020/02/06/python%E6%8F%90%E5%8F%96mfcc%E7%89%B9%E5%BE%81/"/>
      <url>/2020/02/06/python%E6%8F%90%E5%8F%96mfcc%E7%89%B9%E5%BE%81/</url>
      
        <content type="html"><![CDATA[<p>理论部分请看：<a href="https://haythamfayek.com/2016/04/21/speech-processing-for-machine-learning.html" target="_blank" rel="noopener">https://haythamfayek.com/2016/04/21/speech-processing-for-machine-learning.html</a><br>这是我认为最完整的、讲解最清楚的python提取mfcc特征的教程。<br>用到的<code>OSR_us_000_0010_8k.wav</code>数据在这里下载：<br><a href="http://www.voiptroubleshooter.com/open_speech/american.html" target="_blank" rel="noopener">http://www.voiptroubleshooter.com/open_speech/american.html</a><br>完整Python代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">import scipy.io.wavfile</span><br><span class="line">import matplotlib.pylab as plt</span><br><span class="line">sample_rate, signal &#x3D; scipy.io.wavfile.read(&quot;OSR_us_000_0010_8k.wav&quot;)</span><br><span class="line">signal &#x3D; signal[0: int(3.5*sample_rate)]</span><br><span class="line">t &#x3D; np.linspace(0, 3.5, num&#x3D;len(signal))</span><br><span class="line"></span><br><span class="line">pre_emphasis &#x3D; 0.97</span><br><span class="line">emphasized_signal &#x3D; np.append(signal[0], signal[1:] - pre_emphasis*signal[:-1])</span><br><span class="line">frame_size &#x3D; 0.025</span><br><span class="line">frame_stride &#x3D; 0.01</span><br><span class="line">frame_length, frame_step &#x3D; frame_size*sample_rate, frame_stride*sample_rate</span><br><span class="line">signal_length &#x3D; len(emphasized_signal)</span><br><span class="line">frame_length &#x3D; int(round(frame_length))</span><br><span class="line">num_frames &#x3D; int(np.ceil(float(np.abs(signal_length - frame_length)) &#x2F; frame_step))</span><br><span class="line">pad_signal_length &#x3D; num_frames * frame_step + frame_length</span><br><span class="line">z &#x3D; np.zeros(int(pad_signal_length - signal_length))</span><br><span class="line">pad_signal &#x3D; np.append(emphasized_signal, z)</span><br><span class="line">indices &#x3D; np.tile(np.arange(0, frame_length), (num_frames, 1)) + np.tile(np.arange(0, num_frames*frame_step, frame_step), (frame_length, 1)).T</span><br><span class="line">frames &#x3D; pad_signal[indices.astype(np.int32, copy&#x3D;False)]</span><br><span class="line">ham &#x3D; np.hamming(frame_length)</span><br><span class="line"># plt.plot(ham)</span><br><span class="line"># plt.show()</span><br><span class="line"></span><br><span class="line">frames *&#x3D; ham</span><br><span class="line"></span><br><span class="line">NFFT &#x3D; 512</span><br><span class="line">mag_frames &#x3D; np.absolute(np.fft.rfft(frames, NFFT))</span><br><span class="line">pow_frames &#x3D; ((1.0 &#x2F; NFFT) * ((mag_frames) ** 2))  #(348, 257)</span><br><span class="line"></span><br><span class="line">nfilt &#x3D; 40</span><br><span class="line">low_freq_mel &#x3D; 0</span><br><span class="line">high_freq_mel &#x3D; (2595 * np.log10(1 + (sample_rate&#x2F;2) &#x2F; 700))</span><br><span class="line"></span><br><span class="line">mel_points &#x3D; np.linspace(low_freq_mel, high_freq_mel, nfilt + 2)</span><br><span class="line"></span><br><span class="line">hz_points &#x3D; (700 * (10**(mel_points &#x2F; 2595) - 1))</span><br><span class="line"></span><br><span class="line">bin &#x3D; np.floor((NFFT + 1)*hz_points &#x2F; sample_rate)</span><br><span class="line">fbank &#x3D; np.zeros((nfilt, int(np.floor(NFFT &#x2F; 2 + 1))))</span><br><span class="line">for m in range(1, nfilt + 1):</span><br><span class="line">    f_m_minus &#x3D; int(bin[m-1])</span><br><span class="line">    f_m &#x3D; int(bin[m])</span><br><span class="line">    f_m_plus &#x3D; int(bin[m+1])</span><br><span class="line"></span><br><span class="line">    for k in range(f_m_minus, f_m):</span><br><span class="line">        fbank[m-1, k] &#x3D; (k-bin[m-1]) &#x2F; (bin[m]-bin[m - 1])</span><br><span class="line">    for k in range(f_m, f_m_plus):</span><br><span class="line">        fbank[m-1, k] &#x3D; (bin[m + 1] - k) &#x2F; (bin[m + 1] - bin[m])</span><br><span class="line"></span><br><span class="line">filter_banks &#x3D; np.dot(pow_frames, fbank.T)</span><br><span class="line">filter_banks &#x3D; np.where(filter_banks &#x3D;&#x3D; 0, np.finfo(float).eps, filter_banks)</span><br><span class="line">filter_banks &#x3D; 20 * np.log10(filter_banks)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plt.imshow(np.flipud(filter_banks.T), cmap&#x3D;plt.cm.jet, aspect&#x3D;0.2, extent&#x3D;[0,filter_banks.shape[1],0,filter_banks.shape[0]],shape&#x3D;[11, 9])</span><br><span class="line">plt.axis(&quot;normal&quot;)</span><br><span class="line">plt.savefig(&#39;.&#x2F;test2.png&#39;)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><p>运行的结果如下：<br><a href="https://img-blog.csdnimg.cn/20190326162215524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pIVVFJVVNISTEyMw==,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="在这里插入图片描述" class="fancybox"><img alt="在这里插入图片描述" title="在这里插入图片描述" data-src="https://img-blog.csdnimg.cn/20190326162215524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pIVVFJVVNISTEyMw==,size_16,color_FFFFFF,t_70" class="lazyload"></a></p>]]></content>
      
      
      <categories>
          
          <category> ASR </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/05/hello-world/"/>
      <url>/2020/02/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">bash</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
